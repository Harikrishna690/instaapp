{"ast":null,"code":"import _defineProperty from \"/home/vinay/myapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// var path = require('path');\nimport path from 'path';\nimport constants from './constants.js';\nexport function getUrl(url) {\n  return '//' + path.join(constants.API_BASE, url);\n}\nexport function getStatic(url) {\n  return path.join(constants.PUBLIC_URL, url);\n}\nexport function getAdditionalHeaders() {\n  return {\n    'token': constants.TOKEN\n  };\n}\nexport function checkLogin() {\n  return new Promise((resolve, reject) => {\n    fetch(getUrl('/userLogin/'), {\n      method: 'HEAD',\n      headers: _objectSpread({}, getAdditionalHeaders())\n    }).then(res => res.status == 200 ? resolve(true) : reject(false)).catch(error => reject(false));\n  });\n}\nexport function get() {\n  fetch(getUrl('/data/user/get/'), {\n    method: 'GET',\n    headers: _objectSpread({}, getAdditionalHeaders())\n  }).then(response => {\n    response.json().then(data => {\n      console.log(response);\n      console.log(data);\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport function post(username, password) {\n  fetch(getUrl('/login/'), {\n    method: 'POST',\n    headers: _objectSpread({\n      'Content-Type': 'application/json'\n    }, getAdditionalHeaders()),\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then(res => {\n    console.log(res);\n  }).catch(error => {\n    console.log(error);\n  });\n}","map":{"version":3,"sources":["/home/vinay/myapp/src/components/utilities.js"],"names":["path","constants","getUrl","url","join","API_BASE","getStatic","PUBLIC_URL","getAdditionalHeaders","TOKEN","checkLogin","Promise","resolve","reject","fetch","method","headers","then","res","status","catch","error","get","response","json","data","console","log","post","username","password","body","JSON","stringify"],"mappings":";;;;;;AAAA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,OAAO,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACxB,SAAO,OAAOH,IAAI,CAACI,IAAL,CAAUH,SAAS,CAACI,QAApB,EAA8BF,GAA9B,CAAd;AACH;AAED,OAAO,SAASG,SAAT,CAAmBH,GAAnB,EAAwB;AAC3B,SAAOH,IAAI,CAACI,IAAL,CAAUH,SAAS,CAACM,UAApB,EAAgCJ,GAAhC,CAAP;AACH;AAED,OAAO,SAASK,oBAAT,GAAgC;AACnC,SAAO;AACH,aAASP,SAAS,CAACQ;AADhB,GAAP;AAGH;AAED,OAAO,SAASC,UAAT,GAAqB;AACxB,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,IAAAA,KAAK,CACDZ,MAAM,CAAC,aAAD,CADL,EAED;AACIa,MAAAA,MAAM,EAAE,MADZ;AAEIC,MAAAA,OAAO,oBACAR,oBAAoB,EADpB;AAFX,KAFC,CAAL,CASCS,IATD,CASMC,GAAG,IAAIA,GAAG,CAACC,MAAJ,IAAc,GAAd,GAAoBP,OAAO,CAAC,IAAD,CAA3B,GAAoCC,MAAM,CAAC,KAAD,CATvD,EAUCO,KAVD,CAUOC,KAAK,IAAIR,MAAM,CAAC,KAAD,CAVtB;AAWH,GAZM,CAAP;AAaH;AAED,OAAO,SAASS,GAAT,GAAc;AACjBR,EAAAA,KAAK,CACDZ,MAAM,CAAC,iBAAD,CADL,EAED;AACIa,IAAAA,MAAM,EAAE,KADZ;AAEIC,IAAAA,OAAO,oBACAR,oBAAoB,EADpB;AAFX,GAFC,CAAL,CASCS,IATD,CASMM,QAAQ,IAAI;AACNA,IAAAA,QAAQ,CAACC,IAAT,GACCP,IADD,CACMQ,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KAJD;AAKH,GAfT,EAgBSL,KAhBT,CAgBe,UAASC,KAAT,EAAe;AAClBK,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH,GAlBT;AAmBH;AAED,OAAO,SAASO,IAAT,CAAcC,QAAd,EAAwBC,QAAxB,EAAiC;AACpChB,EAAAA,KAAK,CACDZ,MAAM,CAAC,SAAD,CADL,EAED;AACIa,IAAAA,MAAM,EAAE,MADZ;AAEIC,IAAAA,OAAO;AACH,sBAAgB;AADb,OAEAR,oBAAoB,EAFpB,CAFX;AAMIuB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACJ,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf;AANV,GAFC,CAAL,CAWCb,IAXD,CAWMC,GAAG,IAAE;AACPQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACH,GAbD,EAcCE,KAdD,CAcOC,KAAK,IAAE;AACVK,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH,GAhBD;AAiBH","sourcesContent":["// var path = require('path');\nimport path from 'path';\nimport constants from './constants.js';\n\nexport function getUrl(url) {\n    return '//' + path.join(constants.API_BASE, url); \n}\n\nexport function getStatic(url) {\n    return path.join(constants.PUBLIC_URL, url)\n}\n\nexport function getAdditionalHeaders() {\n    return {\n        'token': constants.TOKEN\n    }\n}\n\nexport function checkLogin(){\n    return new Promise((resolve, reject) => {\n        fetch(\n            getUrl('/userLogin/'),\n            {\n                method: 'HEAD',\n                headers: {\n                    ...getAdditionalHeaders()\n                }\n            }\n        )\n        .then(res => res.status == 200 ? resolve(true) : reject(false))\n        .catch(error => reject(false));\n    });\n}\n\nexport function get(){\n    fetch(\n        getUrl('/data/user/get/'),\n        {\n            method :'GET',\n            headers: {\n                ...getAdditionalHeaders()\n            }\n        }\n    )\n    .then(response => {\n                response.json()\n                .then(data => {\n                    console.log(response)\n                    console.log(data)\n                })\n            })\n            .catch(function(error){\n                console.log(error);\n            });\n}\n\nexport function post(username, password){\n    fetch(\n        getUrl('/login/'),\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                ...getAdditionalHeaders()\n            },\n            body: JSON.stringify({username, password})\n        }\n    )\n    .then(res=>{\n        console.log(res);\n    })\n    .catch(error=>{\n        console.log(error)\n    });\n}"]},"metadata":{},"sourceType":"module"}